name: CI Workflow - Docker Build

on:
  pull_request:
    branches:
      - main
      - soham-gitops
      - mvp/*
      - release/*
      - feature/*
    paths:
      - 'elasticgpt-ui/**'
      - 'elasticgpt-api/**'
      - 'elasticgpt-backend/**'
  push:
    branches:
      - main
      - soham-gitops
      - mvp/*
      - release/*
      - feature/*
    paths:
      - 'elasticgpt-ui/**'
      - 'elasticgpt-api/**'
      - 'elasticgpt-backend/**'

jobs:
  # Job 1: Install API and Backend dependencies
  install-api-and-backend-dependencies:
    name: Install API and Backend Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black

  # Job 2: Build Docker images conditionally
  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [install-api-and-backend-dependencies]
    strategy:
      matrix:
        service: [elasticgpt-api, elasticgpt-backend]
    steps:
      - uses: actions/checkout@v4

      - name: Check for changes in ${{ matrix.service }}
        id: changes
        run: |
          echo "Checking for changes in ${{ matrix.service }}..."
          changes=$(git diff --name-only HEAD^ HEAD -- ${{ matrix.service }})
          if [ -z "$changes" ]; then
            echo "No changes detected in ${{ matrix.service }}."
            echo "should_build=false" >> $GITHUB_ENV
          else
            echo "Changes detected in ${{ matrix.service }}."
            echo "should_build=true" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        if: env.should_build == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Extract Git Commit Hash
        if: env.should_build == 'true'
        id: vars
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image for ${{ matrix.service }}
        if: env.should_build == 'true'
        run: |
          # Build the image with both commit ID and `latest` tags
          docker build \
            --file ./${{ matrix.service }}/Dockerfile \
            --tag ${{ matrix.service }}:latest \
            --tag ${{ matrix.service }}:${{ env.commit_hash }} \
            ./${{ matrix.service }}

      - name: Verify Image Rollback Capability
        if: env.should_build == 'true'
        run: |
          echo "Built and pushed Docker images for ${{ matrix.service }} with tags:"
          echo "- latest"
          echo "- ${GITHUB_ENV}"